[alembic]

# 'sys.path' path, will be prepended to sys.path
prepend_sys_path = .

# path to migration scripts
script_location = migrations

# version location specification
version_locations = versions

# version path separator - used to split version_locations
version_path_separator = os
# (default setting - os.pathsep value will be taken)

# template used to generate migration file names
file_template = %%(rev)s_%%(slug)s

# max length of characters to apply to the "slug" field
truncate_slug_length = 40

# whether to search source files recursively in each "version_locations" directory
recursive_version_locations = false

# whether to allow .pyc and .pyo files without a source .py file to be detected as revisions
sourceless = false

# the output encoding for revision files written from 'script.py.mako'
output_encoding = utf-8

# timezone to use when rendering the date within the migration file
# timezone =

# whether to run the environment during the 'revision' command, regardless of autogenerate
revision_environment = false

# sensitive options from-file loading path prefix characters
options.fromfile_prefixes = %%
# (means ['%'] - first '%' used as escape character)


# Database credentials

[database]

# SQLAlchemy dialect for the used dbms
sqlalchemy.dialect = postgresql

# SQLAlchemy driver package for the used dbms
sqlalchemy.driver = psycopg2


# Logging configuration

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
